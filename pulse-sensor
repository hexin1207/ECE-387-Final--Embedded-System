#define USE_ARDUINO_INTERRUPTS true
#include <PulseSensorPlayground.h>
#include <Adafruit_SSD1306.h>
#define OLED_Address 0x3C
Adafruit_SSD1306 oled(128, 64);
#define UpperThreshold 560
#define LowerThreshold 530
#include <LiquidCrystal.h>
#include <SoftwareSerial.h>

LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
SoftwareSerial ArduinoUNO(9, 8);
PulseSensorPlayground pulseSensor;

const int OUTPUT_TYPE = SERIAL_PLOTTER;
const int PIN_INPUT = A0;
const int PIN_TEMP = A1;
const int PIN_START = 13;
const int PIN_RED = 10;
const int PIN_GREEN = 7;
const int PIN_SPEAKER = 6;

int RawValue = 0;
double Voltage = 0;
int tempC = 0;
int lop = 0;

int x = 0;
int lastx = 0;
int lasty = 0;
int LastTime = 0;
int ThisTime;
bool BPMTiming = false;
bool BeatComplete = false;
int BPM = 0;
bool but = false;

void setup() {
  Serial.begin(115200);
  ArduinoUNO.begin(9600);
  lcd.begin(16, 2);
  pulseSensor.analogInput(PIN_INPUT);
  pulseSensor.setOutputType(OUTPUT_TYPE);

  if (!pulseSensor.begin()) {
    for (;;) {
      digitalWrite(PIN_GREEN, LOW);
      digitalWrite(PIN_RED, LOW);
      delay(50);
      digitalWrite(PIN_GREEN, HIGH);
      digitalWrite(PIN_RED, HIGH);
      delay(50);
    }
  }

  oled.begin(SSD1306_SWITCHCAPVCC, OLED_Address);
  oled.clearDisplay();
  oled.setTextSize(2);
  lcd.setCursor(0, 0);
  lcd.print("Place Your Finger");
  lcd.setCursor(0, 1);
  lcd.print("And Press Button");
}

void loop() {
  checkbut();
  delay(20);
  pulseSensor.outputSample();
  RawValue = analogRead(PIN_TEMP);
  Voltage = (RawValue / 1023.0) * 5000;
  tempC = (int)(Voltage - 500) * 0.1;

  if (x > 127)
  {
    oled.clearDisplay();
    x = 0;
    lastx = x;
  }

  ThisTime = millis();
  int value = analogRead(0);
  int y = 60 - (value / 16);
  oled.setTextColor(WHITE);
  oled.writeLine(lastx, lasty, x, y, WHITE);
  lasty = y;
  lastx = x;

  if (value > UpperThreshold)
  {
    if (BeatComplete)
    {
      BPM = ThisTime - LastTime;
      BPM = int(60 / (float(BPM) / 1000));
      BPMTiming = false;
      BeatComplete = false;
      tone(6, 1000, 250);
    }
    if (BPMTiming == false)
    {
      LastTime = millis();
      BPMTiming = true;
    }
  }
  if ((value < LowerThreshold) & (BPMTiming))
    BeatComplete = true;

  if (BPM > 140 || BPM < 60) {
    pulseSensor.fadeOnPulse(PIN_RED);
    digitalWrite(PIN_GREEN, LOW);
  }
  else {
    pulseSensor.fadeOnPulse(PIN_GREEN);
    digitalWrite(PIN_RED, LOW);
  }
  oled.writeFillRect(0, 50, 128, 16, BLACK);
  oled.setCursor(0, 50);
  oled.display();
  x++;
  if (lop % 15 == 0) {
    lcd.clear();
    lcd.setCursor(4, 1);
    lcd.print("Temp: ");
    lcd.print(tempC);
    lcd.print("C");
  }

  if (lop % 5 == 0) {
    lcd.setCursor(4, 0);
    lcd.print("BPM: ");
    lcd.print(BPM);
  }
  if (lop % 20 == 0) {
    ArduinoUNO.println((tempC * 10000000) + BPM);
    Serial.println((tempC) * 10000000 + BPM);
  }
  lop++;
}

void checkbut() {
  if (digitalRead(PIN_START) == HIGH || but) {
    but = true;
  }
  else {
    delay(100);
    checkbut();
  }
}
